[{"/Users/user/WebDev/countries/src/index.js":"1","/Users/user/WebDev/countries/src/reportWebVitals.js":"2","/Users/user/WebDev/countries/src/App.js":"3","/Users/user/WebDev/countries/src/Components/ListCountries.js":"4","/Users/user/WebDev/countries/src/Components/Countries.js":"5","/Users/user/WebDev/countries/src/Components/CountryDash.js":"6","/Users/user/WebDev/countries/src/Components/SideBar.js":"7","/Users/user/WebDev/countries/src/Components/CommentsPage.js":"8","/Users/user/WebDev/countries/src/Components/CasesPage.js":"9"},{"size":592,"mtime":1611347869411,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1611331964594,"results":"12","hashOfConfig":"11"},{"size":751,"mtime":1612657376236,"results":"13","hashOfConfig":"11"},{"size":2325,"mtime":1615367281398,"results":"14","hashOfConfig":"11"},{"size":358,"mtime":1615367206233,"results":"15","hashOfConfig":"11"},{"size":4050,"mtime":1615418306317,"results":"16","hashOfConfig":"11"},{"size":2782,"mtime":1612657322830,"results":"17","hashOfConfig":"11"},{"size":7753,"mtime":1613148493090,"results":"18","hashOfConfig":"11"},{"size":11975,"mtime":1613313471270,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1itdt5b",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/user/WebDev/countries/src/index.js",[],["43","44"],"/Users/user/WebDev/countries/src/reportWebVitals.js",[],"/Users/user/WebDev/countries/src/App.js",["45"],"import logo from './logo.svg';\nimport './App.css';\nimport ListCountries from './Components/ListCountries';\nimport { Route, Switch } from 'react-router-dom';\nimport CountryDash from './Components/CountryDash';\nimport CommentsPage from './Components/CommentsPage';\nimport CasesPage from './Components/CasesPage'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path='/' component={ListCountries} exact />\n        <Route path='/dashboard' component={CountryDash} exact />\n        <Route path='/dashboard/:type' component={CountryDash} />\n        <Route path='/comments' component={CommentsPage} />\n        <Route path='/caseloads/:type' component={CasesPage} />\n\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/user/WebDev/countries/src/Components/ListCountries.js",["46"],"/Users/user/WebDev/countries/src/Components/Countries.js",["47","48"],"/Users/user/WebDev/countries/src/Components/CountryDash.js",["49","50","51"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Grid, Paper, Toolbar, Typography, Box } from '@material-ui/core';\nimport SideBar from './SideBar';\nimport {  useParams } from 'react-router-dom';\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexgrow: 1,\n       \n    }, \n    paper: {\n        padding: theme.spacing(0),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        height: 60,\n    },\n    boxHeader: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        height: 30,\n        boxShadow: '0 3px 5px 2px rgba(192, 192, 192, .3)',\n    },\n    gridContainer: {\n        padding: theme.spacing(5),\n        \n    },\n    appBar: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n      },\n\n}))\n\n\nexport default function CountryDash(props) {\n    const [propes, setPropes] = useState([]);\n    const [loading, setLoading] = useState([]);\n    const [country, setCountry] = useState([]);\n\n    const classes = useStyles();    \n   \n\n    const { type } = useParams();\n    \n\n  \n\n    useEffect(() => {\n        setLoading(true);\n        if(country) {\n            axios\n            .get(`http://localhost:5000/properties/${country}`)\n            .then((res) => {                               \n                setPropes(res.data);\n                setLoading(false);                \n            })\n            .catch((err) => {\n                console.log(err);\n            });\n        }\n    }, []); \n\n      useEffect(() => {\n        const searchedCountry = type;\n        setCountry(searchedCountry);\n    }, []);\n\n    useEffect(() => {\n        console.log(propes)\n    }, [propes])\n\n    return (\n        <div>\n            <AppBar position='static' className={classes.appBar} >\n                <Toolbar>\n                    <Typography>\n                        Country Dashboard\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <SideBar />\n            <div className={classes.root} >\n               {propes.map((prope) => (   \n                <div key={prope.property_no}>\n                    <div> \n                    <Box className={classes.boxHeader}>\n                        Country Dashboard\n                    </Box>                   \n                    <Grid container spacing={3} className={classes.gridContainer} justify=\"center\" >\n                        <Grid item xs={3} spacing={3} className={classes.grid} >\n                            <Paper className={classes.paper}>\n                                <div>\n                                Name: {prope.property_name}\n                                </div> \n                                <div>\n                                Name: {prope.ph_no}\n                                </div>\n                            </Paper>                            \n                        </Grid>\n                        <Grid item xs={3} spacing={3} >\n                            <Paper className={classes.paper}>\n                                Population: {prope.property_no}\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                    </div>\n                    <div>                 \n                    <Grid container spacing={3} justify=\"center\" >\n                        <Grid item xs={3} spacing={3} className={classes.grid} >\n                            <Paper className={classes.paper}>\n                                Hello \n                            </Paper>\n                        </Grid>\n                        <Grid item xs={3} spacing={3} >\n                            <Paper className={classes.paper}>\n                                Hello 2 {prope.town}\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                    </div>\n                </div>\n                ))\n            }</div>\n        </div>\n    )\n\n\n}","/Users/user/WebDev/countries/src/Components/SideBar.js",["52","53","54","55","56"],"import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport HomeIcon from '@material-ui/icons/Home';\n\n\nconst drawerWidth = 240;\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function SideBar() {\n    const classes = useStyles();\n\n    return (\n        <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        anchor=\"left\"\n      >\n        <div className={classes.toolbar} />\n        <Divider />\n        <List>\n          <ListItem button component={Link} to='/'> \n              <ListItemIcon>\n                  <HomeIcon />\n              </ListItemIcon>\n              <ListItemText primary='Home' />              \n          </ListItem>\n          <ListItem button component={Link} to='/dashboard'>\n              <ListItemIcon>\n                  <DashboardIcon/>\n              </ListItemIcon>\n              <ListItemText primary='Dashboard' />              \n          </ListItem>\n          <ListItem button component={Link} to='/comments'>\n              <ListItemIcon>\n                  <DashboardIcon/>\n              </ListItemIcon>\n              <ListItemText primary='Comments' />              \n          </ListItem>\n        </List>\n        <Divider />\n        <List>\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <DashboardIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    )\n}","/Users/user/WebDev/countries/src/Components/CommentsPage.js",["57","58","59","60","61","62","63"],"import { AppBar, Box, Button, Divider, Grid, GridList, GridListTileBar, List, makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Toolbar, Typography } from '@material-ui/core';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom'\nimport SideBar from './SideBar';\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n      },\n      main: {\n          width: `calc(100% - ${drawerWidth}px)`,\n          marginLeft: drawerWidth,\n      },\n      grid: {\n          \n      },\n      table: {\n          minWidth: 650,\n      },\n      box: {\n        paddingTop: '0px',\n        paddingBottom: '20px',       \n      },\n\n      tableMenu: {\n          //paddingTop: '20px',\n          alignContent: 'left',\n          border: 'solid'   \n      },\n      button: {\n        margin: theme.spacing(1)\n      },\n      \n      // necessary for content to be below app bar\n      toolbar: theme.mixins.toolbar,\n      content: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.default,\n        padding: theme.spacing(3),\n        \n      },\n})) \n\n\n\n\n\nexport default function CommentsPage() {\n    const [loading, setLoading] = useState();\n    const [posts, setPosts] = useState([]);\n    const [filteredPosts, setFilteredPosts] = useState([]);\n    const [mgr, setMgr] = useState('');\n    const classes = useStyles();\n\n    const changeManagerAll = (e) => {\n        setMgr('all');\n    }\n\n    const changeToGST = (e) => {\n        setMgr('GST');\n        console.log(\"changed to GST\")\n\n    }\n    \n    const changeToHJD = (e) => {\n        setMgr('HJD');\n        console.log(\"changed to HJD\")\n\n    }\n\n    const changeToJD = (e) => {\n        setMgr('JD');\n        console.log(\"changed to JD\")\n    }\n\n    const changeToTM = (e) => {\n        setMgr('TM');\n        console.log(\"changed to TM\")\n\n    }\n    \n    const changeToTS = (e) => {\n        setMgr('TS');\n        console.log(\"changed to TS\")\n\n    }\n    \n\n \n    useEffect(() => {\n        setLoading(true);\n        axios\n          .get('http://localhost:5000/cases')\n          .then((res) => {\n            setPosts(res.data);\n            setLoading(false);\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      }, []);\n\n\n      useEffect(() => {\n          console.log(posts);\n      }, [posts]);\n\n      useEffect(() => {\n          if(mgr === 'all'){\n              setFilteredPosts(posts)\n          } else {\n              setFilteredPosts(\n                  posts.filter((post) => \n                      post.manager === mgr\n                  )\n              )\n          }\n      }, [mgr])\n\n  \n\n\n    return (\n        <div className={classes.root}>\n            <AppBar position='static' className={classes.appBar}>\n                <Toolbar className={classes.toolbar}>\n                    <Typography>\n                        Cases\n                    </Typography>\n                    \n                </Toolbar>\n            </AppBar>\n            <SideBar />\n            <div >\n                <main className={classes.main}>\n                    <Box className={classes.tableMenu}>\n                        <Toolbar>\n                            <Typography>\n                                Cases\n                            </Typography>\n                            <Button\n                            variant='contained'\n                            color='primary'\n                            className={classes.button}\n                            onClick={changeManagerAll}\n                            >\n                            All                                \n                            </Button>\n                            <Button\n                            variant='contained'\n                            color='primary'\n                            className={classes.button}\n                            onClick={changeToGST}\n                            >\n                            GST                                \n                            </Button>\n                            <Button\n                            variant='contained'\n                            color='primary'\n                            className={classes.button}\n                            onClick={changeToHJD}\n                            >\n                            HJD                                \n                            </Button>\n                            <Button\n                            variant='contained'\n                            color='primary'\n                            className={classes.button}\n                            onClick={changeToJD}\n                            >\n                            JD                                \n                            </Button>\n                            <Button\n                            variant='contained'\n                            color='primary'\n                            className={classes.button}\n                            onClick={changeToTM}\n                            >\n                            TM                                \n                            </Button>\n                            <Button\n                            variant='contained'\n                            color='primary'\n                            className={classes.button}\n                            onClick={changeToTS}\n                            >\n                            TS                                \n                            </Button>\n\n\n                        </Toolbar>\n                    </Box>\n                    <Box className={classes.box}>                   \n                    \n                        <TableContainer component={Paper}>\n                            <Table className={classes.table} aria-label=\"simple table\">\n                                <TableHead>\n                                <TableRow>\n                                    <TableCell>Parish No</TableCell>\n                                    <TableCell align=\"right\">Case No</TableCell>\n                                    <TableCell align=\"right\">Enquiry</TableCell>\n                                    <TableCell align=\"right\">Manager</TableCell>\n                                    <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n                                    <TableCell align=\"right\"></TableCell>\n                                </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                {filteredPosts.map((post) => (\n                                    <TableRow key={post.case_no}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {post.ph_no}\n                                    </TableCell>\n                                    <TableCell align=\"right\">{post.case_no}</TableCell>\n                                    <TableCell align=\"right\">{post.enquiry}</TableCell>\n                                    <TableCell align=\"right\">{post.manager}</TableCell>\n                                    <TableCell align=\"right\">{post.ph_no}</TableCell>\n                                    <TableCell><Link to={`caseloads/${post.case_no}`}>View</Link></TableCell>\n                                    </TableRow>\n                                ))}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </Box>\n                </main>\n               \n                \n                \n                \n            </div>\n            \n            \n        </div>\n    )\n}","/Users/user/WebDev/countries/src/Components/CasesPage.js",["64","65","66","67","68","69","70","71"],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":1,"column":8,"nodeType":"78","messageId":"79","endLine":1,"endColumn":12},{"ruleId":"76","severity":1,"message":"80","line":36,"column":10,"nodeType":"78","messageId":"79","endLine":36,"endColumn":17},{"ruleId":"76","severity":1,"message":"81","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":26},{"ruleId":"76","severity":1,"message":"82","line":1,"column":28,"nodeType":"78","messageId":"79","endLine":1,"endColumn":36},{"ruleId":"76","severity":1,"message":"80","line":41,"column":12,"nodeType":"78","messageId":"79","endLine":41,"endColumn":19},{"ruleId":"83","severity":1,"message":"84","line":65,"column":8,"nodeType":"85","endLine":65,"endColumn":10,"suggestions":"86"},{"ruleId":"83","severity":1,"message":"87","line":70,"column":8,"nodeType":"85","endLine":70,"endColumn":10,"suggestions":"88"},{"ruleId":"76","severity":1,"message":"89","line":6,"column":8,"nodeType":"78","messageId":"79","endLine":6,"endColumn":19},{"ruleId":"76","severity":1,"message":"90","line":7,"column":8,"nodeType":"78","messageId":"79","endLine":7,"endColumn":14},{"ruleId":"76","severity":1,"message":"91","line":8,"column":8,"nodeType":"78","messageId":"79","endLine":8,"endColumn":15},{"ruleId":"76","severity":1,"message":"92","line":10,"column":8,"nodeType":"78","messageId":"79","endLine":10,"endColumn":18},{"ruleId":"76","severity":1,"message":"93","line":15,"column":8,"nodeType":"78","messageId":"79","endLine":15,"endColumn":17},{"ruleId":"76","severity":1,"message":"94","line":1,"column":31,"nodeType":"78","messageId":"79","endLine":1,"endColumn":38},{"ruleId":"76","severity":1,"message":"95","line":1,"column":40,"nodeType":"78","messageId":"79","endLine":1,"endColumn":44},{"ruleId":"76","severity":1,"message":"96","line":1,"column":46,"nodeType":"78","messageId":"79","endLine":1,"endColumn":54},{"ruleId":"76","severity":1,"message":"97","line":1,"column":56,"nodeType":"78","messageId":"79","endLine":1,"endColumn":71},{"ruleId":"76","severity":1,"message":"98","line":1,"column":73,"nodeType":"78","messageId":"79","endLine":1,"endColumn":77},{"ruleId":"76","severity":1,"message":"80","line":52,"column":12,"nodeType":"78","messageId":"79","endLine":52,"endColumn":19},{"ruleId":"83","severity":1,"message":"99","line":121,"column":10,"nodeType":"85","endLine":121,"endColumn":15,"suggestions":"100"},{"ruleId":"76","severity":1,"message":"101","line":2,"column":10,"nodeType":"78","messageId":"79","endLine":2,"endColumn":21},{"ruleId":"76","severity":1,"message":"102","line":5,"column":64,"nodeType":"78","messageId":"79","endLine":5,"endColumn":67},{"ruleId":"76","severity":1,"message":"94","line":5,"column":135,"nodeType":"78","messageId":"79","endLine":5,"endColumn":142},{"ruleId":"83","severity":1,"message":"103","line":75,"column":8,"nodeType":"85","endLine":75,"endColumn":10,"suggestions":"104"},{"ruleId":"83","severity":1,"message":"105","line":92,"column":8,"nodeType":"85","endLine":92,"endColumn":10,"suggestions":"106"},{"ruleId":"107","severity":1,"message":"108","line":105,"column":30,"nodeType":"109","messageId":"110","endLine":105,"endColumn":32},{"ruleId":"83","severity":1,"message":"105","line":109,"column":8,"nodeType":"85","endLine":109,"endColumn":18,"suggestions":"111"},{"ruleId":"112","severity":1,"message":"113","line":191,"column":29,"nodeType":"114","endLine":191,"endColumn":93},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'country'. Either include it or remove the dependency array.","ArrayExpression",["117"],"React Hook useEffect has a missing dependency: 'type'. Either include it or remove the dependency array.",["118"],"'CssBaseline' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'InboxIcon' is defined but never used.","'Divider' is defined but never used.","'Grid' is defined but never used.","'GridList' is defined but never used.","'GridListTileBar' is defined but never used.","'List' is defined but never used.","React Hook useEffect has a missing dependency: 'posts'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFilteredPosts' needs the current value of 'posts'.",["119"],"'useLocation' is defined but never used.","'Box' is defined but never used.","React Hook useEffect has missing dependencies: 'newCase' and 'type'. Either include them or remove the dependency array.",["120"],"React Hook useEffect has a missing dependency: 'newCase'. Either include it or remove the dependency array.",["121"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["122"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"Update the dependencies array to be: [country]",{"range":"135","text":"136"},"Update the dependencies array to be: [type]",{"range":"137","text":"138"},"Update the dependencies array to be: [mgr, posts]",{"range":"139","text":"140"},"Update the dependencies array to be: [newCase, type]",{"range":"141","text":"142"},"Update the dependencies array to be: [newCase]",{"range":"143","text":"144"},"Update the dependencies array to be: [caseData, newCase]",{"range":"145","text":"146"},[1601,1603],"[country]",[1714,1716],"[type]",[2754,2759],"[mgr, posts]",[1893,1895],"[newCase, type]",[2315,2317],"[newCase]",[2666,2676],"[caseData, newCase]"]